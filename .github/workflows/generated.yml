GitHub Actions is a powerful tool that allows you to automate software workflows directly in your GitHub repository. However, it's important to note that GitHub Actions is not designed to directly monitor external services like Dropbox. 

To achieve what you're asking, you would need to use a combination of a Dropbox webhook (to notify when a file is uploaded), a server to receive the webhook (like an AWS Lambda function or a small Express.js app), and then use the GitHub API to trigger a GitHub Action.

Here is a simplified example of how a GitHub Actions workflow file might look like, assuming you have a server set up to trigger it:

```yaml
name: Notify Admin and Store Metadata

on: 
  repository_dispatch:
    types: [dropbox-upload]

jobs:
  notify-and-store-metadata:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Send Email to Admin
      run: |
        echo "A file has been uploaded to Dropbox" | mail -s "Dropbox Upload Alert" admin@example.com

    - name: Store Metadata
      run: |
        echo "File metadata: ${{ github.event.client_payload.metadata }}" >> metadata.txt

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
```

This workflow is triggered by a `repository_dispatch` event, which is a way to trigger a workflow from outside of GitHub. The server you set up would need to send a POST request to the GitHub API to trigger this event, passing in the file metadata as part of the payload.

The `notify-and-store-metadata` job then checks out your repository, sends an email to the admin, stores the file metadata in a text file, and pushes the changes back to the repository.

Please note that this is a very simplified example and might need adjustments based on your exact requirements. For example, you might need to set up email server settings before you can send an email, or you might want to store the metadata in a database instead of a text file.